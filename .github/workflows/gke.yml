name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: peer-program-cluster-1    # Add your cluster name here.
  GKE_ZONE: asia-southeast1  # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-peerprogram # Add your deployment name here.

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-18.04
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          service_account_email: ${{ secrets.ACCOUNT_EMAIL }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: peer-program-cluster-1
          location: asia-southeast1
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Kubernetes env var
      - name: Set up Kubernetes env var
        run: |-
          kubectl create secret generic prod ${{ secrets.PRODUCTION }}
          kubectl create secret tls onlyduh-tls-secrets --cert ${{ secrets.SERVER_CRT }} --key=${{ secrets.SERVER_KEY }}

      # Build, Push and deploy the Docker images
      - name: Code Executor Image
        run: |-
          chmod +x build_deploy.sh
          sudo ./build_deploy.sh
        working-directory: Code Executor/app

      - name: Docs Image
        run: |-
          chmod +x build_deploy.sh
          sudo ./build_deploy.sh
        working-directory: Docs

      - name: Frontend Image
        run: |-
          chmod +x build_deploy.sh
          sudo ./build_deploy.sh
        working-directory: Frontend

      - name: Sessions Image
        run: |-
          chmod +x build_deploy.sh
          sudo ./build_deploy.sh
        working-directory: Sessions

      # run kubectl apply command for ingress and horizontal-pod
      - name: kubectl apply
        run: |-
          kubectl apply -f '09 - ingress.yml'
          kubectl apply -f '10 - code-executor-horizontal-pod-autoscaler.yml'
        working-directory: kubernetes
